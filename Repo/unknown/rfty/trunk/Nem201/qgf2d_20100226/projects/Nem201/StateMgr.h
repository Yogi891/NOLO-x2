#ifndef _STATEMGR_H_
#define _STATEMGR_H_

#include <vector>
#include "Player.h"

class State;
enum StateType;



class StateMgr
{
public:

	/////////////////////////////////////////////////////////////////////////////////
	//D'tor
	/////////////////////////////////////////////////////////////////////////////////
	~StateMgr();

	/////////////////////////////////////////////////////////////////////////////////
	//Init the singleton for the state manager
	////////////////////////////////////////////////////////////////////////////////
	void Init();

	/////////////////////////////////////////////////////////////////////////////////
	//shuts down the state manager
	////////////////////////////////////////////////////////////////////////////////
	static void ShutDown();

	////////////////////////////////////////////////////////////////////////////////
	//Returns the instance of the statemgr
	////////////////////////////////////////////////////////////////////////////////
	static StateMgr& GetInstance();

	////////////////////////////////////////////////////////////////////////////////
	//Main loop for game
	//If there is no current state it will create a menu state
	////////////////////////////////////////////////////////////////////////////////
	void Run();

	///////////////////////////////////////////////////////////////////////////////
	//Switchs the state to the main state
	//Will create the state if it doesnt exist
	///////////////////////////////////////////////////////////////////////////////
	void SwitchState(StateType state);

	///////////////////////////////////////////////////////////////////////////////
	//
	///////////////////////////////////////////////////////////////////////////////
	void SetShipType(ShipType ship);

private:

	/////////////////////////////////////////////////////////////////////////////////
	//singleton c'tor
	////////////////////////////////////////////////////////////////////////////////
	StateMgr();

	//
	//Singleton instance
	//
	static StateMgr* m_pInstance;

	//
	//States
	//
	State* m_pCurState;

	//
	//Stores previous states
	//
	std::vector<State*> States;

	//
	//Data that needs to be passed between states
	//
	ShipType m_ChoosenShip;
	float m_playerScore;

	//
	//FPS
	//
	sf::String* m_pFPS;
	float m_FPS;
};

#endif


#ifndef _BASICBULLET_H_
#define _BASICBULLET_H_

#include "Bullet.h"

class Timeattack;
struct Circle;

enum bulletType
{
	normal,
	missile,
	bomb,
};


class BasicBullet : public Bullet
{
public:
	/////////////////////////////////////////////////////////////////////////////////////////
	//State inheriated functions
	/////////////////////////////////////////////////////////////////////////////////////////
	BasicBullet(Timeattack& a_state);
	virtual ~BasicBullet();
	virtual void Update(float dt);
	virtual void Init(float lifeTime,sf::Vector2f pos){}

	void Init(float lifeTime,sf::Vector2f pos, bulletType a_type, float waitTime = 0);

	////////////////////////////////////////////////////////////////////////////////////////
	//Returns if bullet isAlive
	////////////////////////////////////////////////////////////////////////////////////////
	bool IsALive(){return m_IsAlive;};

	////////////////////////////////////////////////////////////////////////////////////////
	//Returns the bullets sprite
	////////////////////////////////////////////////////////////////////////////////////////
	sf::Sprite& GetDrawable(){return *m_pSprite;};

	////////////////////////////////////////////////////////////////////////////////////////
	//Returns if bullet isAlive
	////////////////////////////////////////////////////////////////////////////////////////
	void SetAlive(bool a_Alive);
	
	/////////////////////////////////////////////////////////////////////////////////////////
	//Sets the bullets velocity
	/////////////////////////////////////////////////////////////////////////////////////////
	void SetVelocity(sf::Vector2f vel);

	/////////////////////////////////////////////////////////////////////////////////////////
	//Get how much damge this bullet does
	/////////////////////////////////////////////////////////////////////////////////////////
	float GetDmg(){return m_Dmg;}

	//////////////////////////////////////////////////////////////////////////////////////////
	//Returns the type of bullet that it is
	//////////////////////////////////////////////////////////////////////////////////////////
	bulletType& GetType(){return m_type;}

	//////////////////////////////////////////////////////////////////////////////////////////
	//Returns the circ for this bullet
	//////////////////////////////////////////////////////////////////////////////////////////
	Circle& GetCirc(){return *m_pCirc;}

private:
	//
	//Stores the bullets velocity
	//
	sf::Vector2f m_Velocity;

	//
	//Holds how much Dmg a bullet does to an enemy
	//
	float m_Dmg;

	//
	//Holds how long a bullet waits before it move from the player
	//
	float m_WaitTime;

	//
	//Holds a ref to parent state
	//
	Timeattack& m_State;

	//
	//Stores what type of bullet it is
	//
	bulletType m_type;

	//
	//Used for collision
	//
	Circle* m_pCirc;

};

#endif
